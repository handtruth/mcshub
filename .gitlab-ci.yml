image: reg.handtruth.com/mc/mcshub/build-tools:latest

stages:
  - build
  - test
  - package
  - deploy

Build_Alpine:
  stage: build
  image: reg.handtruth.com/mc/mcshub/build-alpine:latest
  script:
    - ./configure
    - make
  tags: ["default"]
  artifacts:
    paths:
      - out/mcshub

Build_X86_64:
  stage: build
  script:
    - ./configure --target="x86_64-linux-gnu" --gcc-version=8
    - make
  tags: ["default"]
  artifacts:
    paths:
      - out/mcshub

Build_Armhf:
  stage: build
  script:
    - ./configure --target="arm-linux-gnueabihf" --gcc-version=8
    - make
  tags: ["default"]
  artifacts:
    paths:
      - out/mcshub

Test_X86_64:
  stage: test
  script:
    - ./configure --target="x86_64-linux-gnu" --gcc-version=8
    - make test
  tags: ["default"]
  dependencies: []
  
Memcheck_X86_64:
  stage: test
  script:
    - ./configure --target="x86_64-linux-gnu" --gcc-version=8 --debug
    - make test DBG="valgrind --error-exitcode=1 --leak-check=full --tool=memcheck --track-origins=yes"
  tags: ["default"]
  dependencies: []

AlpineDockerImage:
  stage: package
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  services:
    - name: docker:dind
      entrypoint: ["dockerd", "--host=tcp://0.0.0.0:2375"]
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG -f Dockerfile.alpine .
    - docker push $IMAGE_TAG
    - docker rmi $IMAGE_TAG
  tags: ["docker"]
  only:
    - master
  dependencies:
    - Build_Alpine

Deploy:
  stage: deploy
  image: docker:stable
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_TAG
    - docker rm mcsnet-mcshub
    - docker restart mcsman
  tags: ["deploy"]
  only:
    - master
  dependencies: []

cache:
  paths:
    - dep
